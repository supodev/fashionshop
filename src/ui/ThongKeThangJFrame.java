/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import dao.HoaDonChiTietDAO;
import dao.HoaDonDAO;
import dao.ThongKeDAO;
import java.io.BufferedOutputStream;
import java.io.FileOutputStream;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.BorderStyle;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.FillPatternType;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import utils.MsgBox;
import utils.XDate;

/**
 *
 * @author vvtvo
 */
public class ThongKeThangJFrame extends javax.swing.JFrame {

    /**
     * Creates new form ThongKeJFrame
     */
    public ThongKeThangJFrame() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblThongKe = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblTongTien = new javax.swing.JLabel();
        lblGiamGia = new javax.swing.JLabel();
        lblLai = new javax.swing.JLabel();
        btnAll = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        lblTongTienNhap = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        cboThang = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        cboNam = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnThognKe = new javax.swing.JButton();
        btnXuatExcel = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblThongKe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã HD", "Tổng SP", "Tiền giảm giá", "Ngày", "Tên NV"
            }
        ));
        jScrollPane1.setViewportView(tblThongKe);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Tổng thu vào thực tế");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Tiền giảm giá");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Tổng lãi mặt hàng");

        lblTongTien.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTongTien.setForeground(new java.awt.Color(0, 0, 255));
        lblTongTien.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTongTien.setText("0");

        lblGiamGia.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblGiamGia.setForeground(new java.awt.Color(0, 0, 255));
        lblGiamGia.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblGiamGia.setText("0");

        lblLai.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblLai.setForeground(new java.awt.Color(0, 0, 255));
        lblLai.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblLai.setText("0");

        btnAll.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAll.setText("Tính tổng tất cả hóa đơn");
        btnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Tổng giá nhập");

        lblTongTienNhap.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTongTienNhap.setForeground(new java.awt.Color(0, 0, 255));
        lblTongTienNhap.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTongTienNhap.setText("0");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("__");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("__");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAll)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel11)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5))))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblTongTien, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                            .addComponent(lblGiamGia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTongTienNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblLai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnAll)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(lblTongTien))
                                .addGap(25, 25, 25))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGiamGia)
                            .addComponent(jLabel3))
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(lblTongTienNhap))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblLai))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cboThang.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboThang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("/");

        cboNam.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboNam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Chọn ngày tháng năm cần thống kê");

        btnThognKe.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnThognKe.setText("Thông kê");
        btnThognKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThognKeActionPerformed(evt);
            }
        });

        btnXuatExcel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnXuatExcel.setText("Xuất Excel");
        btnXuatExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(cboThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnThognKe)
                        .addGap(18, 18, 18)
                        .addComponent(btnXuatExcel)))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(cboNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThognKe)
                    .addComponent(btnXuatExcel))
                .addContainerGap())
        );

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Tất cả hóa đơn");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Số lượng hàng bán");

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Tên SP", "ĐVT", "SL", "Đơn giá", "T.T Bán", "Giá nhập", "T.T Nhập"
            }
        ));
        jScrollPane2.setViewportView(tblSanPham);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 762, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 762, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThognKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThognKeActionPerformed
        // TODO add your handling code here:
        fillTableHD_SP();
        fillText();
    }//GEN-LAST:event_btnThognKeActionPerformed

    private void btnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllActionPerformed
        // TODO add your handling code here:
        fillTableALL();
        fillText();
    }//GEN-LAST:event_btnAllActionPerformed

    private void btnXuatExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatExcelActionPerformed
        // TODO add your handling code here:
        xuatFile();
    }//GEN-LAST:event_btnXuatExcelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThongKeThangJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThongKeThangJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThongKeThangJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongKeThangJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThongKeThangJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAll;
    private javax.swing.JButton btnThognKe;
    private javax.swing.JButton btnXuatExcel;
    private javax.swing.JComboBox<String> cboNam;
    private javax.swing.JComboBox<String> cboThang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblGiamGia;
    private javax.swing.JLabel lblLai;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JLabel lblTongTienNhap;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTable tblThongKe;
    // End of variables declaration//GEN-END:variables

    private void init() {
        this.setLocationRelativeTo(null);
        String nam;
        cboNam.removeAllItems();
        for (int i = 2018; i <= 2050; i++) {
            nam = String.valueOf(i).toString();
            cboNam.addItem(nam);
        }
    }
    HoaDonDAO hdao = new HoaDonDAO();
    HoaDonChiTietDAO ccdao = new HoaDonChiTietDAO();
    ThongKeDAO dao = new ThongKeDAO();

    void fillTableHD_SP() {
        int thang = Integer.parseInt(cboThang.getModel().getSelectedItem().toString());
        int nam = Integer.parseInt(cboNam.getModel().getSelectedItem().toString());
        try {
            DefaultTableModel model = (DefaultTableModel) tblThongKe.getModel();
            model.setRowCount(0);
            List<Object[]> list = dao.getHD(thang, nam);
            int stt = 1;
            for (Object[] row : list) {
                model.addRow(new Object[]{stt++, row[0], row[1], row[2], row[3], row[4]});
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn1!");
        }
        try {
            DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
            model.setRowCount(0);
            List<Object[]> list = dao.getSP(thang, nam);
            for (Object[] row : list) {
                model.addRow(new Object[]{row[0], row[1], row[2], row[3], row[4], row[5], row[6]});
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn2!");
        }
    }

    void fillTableALL() {
        try {
            DefaultTableModel model = (DefaultTableModel) tblThongKe.getModel();
            model.setRowCount(0);
            List<Object[]> list = dao.getAllHD();
            int stt = 1;
            for (Object[] row : list) {
                model.addRow(new Object[]{stt++, row[0], row[1], row[2], row[3], row[4]});
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn3!");
        }
        try {
            DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
            model.setRowCount(0);
            List<Object[]> list = dao.getAllSP();
            for (Object[] row : list) {
                model.addRow(new Object[]{row[0], row[1], row[2], row[3], row[4], row[5], row[6]});
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn4!");
        }
    }

    void fillText() {
        double giamGia = 0;
        double tongTien = 0;
        double tongTienNhap = 0;

        for (int i = 0; i < tblThongKe.getRowCount(); i++) {
            double giagiam = Double.parseDouble(tblThongKe.getValueAt(i, 3).toString());
            giamGia += giagiam;
        }
        for (int i = 0; i < tblSanPham.getRowCount(); i++) {
            double tienBan = Double.parseDouble(tblSanPham.getValueAt(i, 4).toString());
            tongTien += tienBan;
            double tienNhap = Double.parseDouble(tblSanPham.getValueAt(i, 5).toString());
            tongTienNhap += tienNhap;
        }
        double lai = tongTien - giamGia - tongTienNhap;
        lblGiamGia.setText(NumberFormat.getNumberInstance().format(giamGia) + " VNĐ");
        lblLai.setText(NumberFormat.getNumberInstance().format(lai) + " VNĐ");
        lblTongTien.setText(NumberFormat.getNumberInstance().format(tongTien) + " VNĐ");
        lblTongTienNhap.setText(NumberFormat.getNumberInstance().format(tongTienNhap) + " VNĐ");
    }

    void xuatFile() {
        String[] columns = {"STT", "Mã HĐ", "Tổng SP", "Tổng Giảm giá", "Ngày tạo", "Tên Nhân Viên"};
        JFileChooser excelFileChooser = new JFileChooser();
        excelFileChooser.setDialogTitle("Save as");
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("EXCEL FILES", "xls", "xlsx", "xlxs");
        excelFileChooser.setFileFilter(fnef);
        int excelChooser = excelFileChooser.showSaveDialog(null);
        if (excelChooser == JFileChooser.APPROVE_OPTION) {
            FileOutputStream excelFOU = null;
            BufferedOutputStream excelBOU = null;
            XSSFWorkbook excelJTableExporter = null;
            Row row = null;
            Cell cell = null;
            try {
                excelJTableExporter = new XSSFWorkbook();
                XSSFSheet excelSheet = excelJTableExporter.createSheet("JTable Sheet");
                excelSheet.setDefaultColumnWidth(15);
                // xét font cho header 
                XSSFFont headerFont = excelJTableExporter.createFont();
                headerFont.setBold(true); // in đậm
                headerFont.setFontHeightInPoints((short) 14);
                // xét font cho title chính
                XSSFFont titleFont = excelJTableExporter.createFont();
                titleFont.setBold(true);
                titleFont.setFontHeightInPoints((short) 18);
                titleFont.setColor(IndexedColors.BLUE.getIndex());
                //
                XSSFFont tieuDePhuFont = excelJTableExporter.createFont();
                tieuDePhuFont.setBold(true);
                tieuDePhuFont.setFontHeightInPoints((short) 12);
                tieuDePhuFont.setColor(IndexedColors.BLUE.getIndex());
                // cellStyle cua header bảng
                CellStyle headerCellStyle = excelJTableExporter.createCellStyle();
                headerCellStyle.setFont(headerFont);
                headerCellStyle.setFillForegroundColor(IndexedColors.AQUA.getIndex());
                headerCellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);
                headerCellStyle.setBorderBottom(BorderStyle.MEDIUM);
                headerCellStyle.setBorderTop(BorderStyle.MEDIUM);
                headerCellStyle.setBorderLeft(BorderStyle.MEDIUM);
                headerCellStyle.setBorderRight(BorderStyle.MEDIUM);
                // cellStyle của bảng
                CellStyle tableCellStyle = excelJTableExporter.createCellStyle();
                tableCellStyle.setBorderBottom(BorderStyle.MEDIUM);
                tableCellStyle.setBorderTop(BorderStyle.MEDIUM);
                tableCellStyle.setBorderLeft(BorderStyle.MEDIUM);
                tableCellStyle.setBorderRight(BorderStyle.MEDIUM);
                // test for
                for (int i = 0; i < tblThongKe.getRowCount() + 10; i++) {
                    row = excelSheet.createRow(i);
                    for (int j = 0; j < tblThongKe.getColumnCount(); j++) {
                        cell = row.createCell(j);
                        if (i == 0 && j == 0) {
                            CellStyle titleCellStyle = excelJTableExporter.createCellStyle();
                            cell.setCellValue("BÁO CÁO THỐNG KÊ");
                            titleCellStyle.setFont(titleFont); // add font vào cell
                            titleCellStyle.setAlignment(HorizontalAlignment.CENTER); // xét nằm giữa
                            cell.setCellStyle(titleCellStyle);
                            excelSheet.addMergedRegion(new CellRangeAddress(0, 0, 0, columns.length - 1)); // gộp dòng
                        }
                        String ngay = String.valueOf(XDate.toString(new Date(), "dd/mm/yyyy"));
                        if (i == 1 && j == 0) {
                            CellStyle NgayThongKeCellStyle = excelJTableExporter.createCellStyle(); // tạo cellStyle để định dạng
                            cell.setCellValue(ngay);
                            NgayThongKeCellStyle.setAlignment(HorizontalAlignment.CENTER); // xét nằm giữa
                            NgayThongKeCellStyle.setFont(tieuDePhuFont);
                            cell.setCellStyle(NgayThongKeCellStyle);
                            excelSheet.addMergedRegion(new CellRangeAddress(1, 1, 0, columns.length - 1)); // gộp dòng
                        }

                        if (i == 4 && j == 0) {
                            CellStyle TongSoLuongCellStyle = excelJTableExporter.createCellStyle(); // tạo cellStyle để định dạng
                            TongSoLuongCellStyle.setFont(tieuDePhuFont);
                            TongSoLuongCellStyle.setAlignment(HorizontalAlignment.LEFT);
                            cell.setCellStyle(TongSoLuongCellStyle);
                            cell.setCellValue("Tổng tiền bán: " + lblTongTien.getText());
                            excelSheet.addMergedRegion(new CellRangeAddress(4, 4, 0, 3)); // gộp dòng                       
                        }

                        if (i == 5 && j == 0) {
                            CellStyle TongSoLuongCellStyle = excelJTableExporter.createCellStyle(); // tạo cellStyle để định dạng
                            TongSoLuongCellStyle.setFont(tieuDePhuFont);
                            TongSoLuongCellStyle.setAlignment(HorizontalAlignment.LEFT);
                            cell.setCellStyle(TongSoLuongCellStyle);
                            cell.setCellValue("Tổng giảm giá: " + lblGiamGia.getText());
                            excelSheet.addMergedRegion(new CellRangeAddress(5, 5, 0, 3)); // gộp dòng                       
                        }
                        if (i == 4 && j == 4) {
                            CellStyle TongSoLuongCellStyle = excelJTableExporter.createCellStyle(); // tạo cellStyle để định dạng
                            TongSoLuongCellStyle.setFont(tieuDePhuFont);
                            TongSoLuongCellStyle.setAlignment(HorizontalAlignment.RIGHT);
                            cell.setCellStyle(TongSoLuongCellStyle);
                            cell.setCellValue("Tổng tiền nhập: " + lblTongTienNhap.getText());
                            excelSheet.addMergedRegion(new CellRangeAddress(4, 4, 4, 5)); // gộp dòng                       
                        }

                        if (i == 5 && j == 4) {
                            CellStyle TongSoLuongCellStyle = excelJTableExporter.createCellStyle(); // tạo cellStyle để định dạng
                            TongSoLuongCellStyle.setFont(tieuDePhuFont);
                            TongSoLuongCellStyle.setAlignment(HorizontalAlignment.RIGHT);
                            cell.setCellStyle(TongSoLuongCellStyle);
                            cell.setCellValue("Tổng Lãi: " + lblLai.getText());
                            excelSheet.addMergedRegion(new CellRangeAddress(5, 5, 4, 5)); // gộp dòng                       
                        }
                    }
                }

                // xét vị trí giá trị cho header bảng
                row = excelSheet.createRow(6);
                for (int i = 0; i < columns.length; i++) {
                    cell = row.createCell(i);
                    cell.setCellValue(columns[i]);
                    cell.setCellStyle(headerCellStyle);
                }
                // xet vị trí giá trị cho bảng
                for (int i = 0; i < tblThongKe.getRowCount(); i++) {
                    row = excelSheet.createRow(i + 7);
                    for (int j = 0; j < tblThongKe.getColumnCount(); j++) {
                        cell = row.createCell(j);
                        cell.setCellValue(tblThongKe.getValueAt(i, j).toString());
                        cell.setCellStyle(tableCellStyle);
                        // xet size cho cot
                        excelSheet.autoSizeColumn(i);
                        excelSheet.autoSizeColumn(i + 1);
                    }
                }

                excelFOU = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
                excelBOU = new BufferedOutputStream(excelFOU);
                excelJTableExporter.write(excelBOU);
                JOptionPane.showMessageDialog(this, "Đã xuất file");
            } catch (Exception e) {
                MsgBox.alert(this, "Có lỗi: " + e.toString());
            } finally {
                try {
                    if (excelBOU != null) {
                        excelBOU.close();
                    }
                    if (excelFOU != null) {
                        excelFOU.close();
                    }
                    if (excelJTableExporter != null) {
                        excelJTableExporter.close();
                    }
                    excelFOU.close();
                } catch (Exception e) {
                    MsgBox.alert(this, "Có lỗi: " + e.toString());
                }
            }
        }
    }
}
