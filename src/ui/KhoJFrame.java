/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import dao.DonViTinhDAO;
import dao.KhoDAO;
import dao.LoaiSanPhamDAO;
import dao.SanPhamDAO;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import model.DonViTinh;
import model.Kho;
import model.LoaiSanPham;
import model.SanPham;
import utils.MsgBox;

/**
 *
 * @author vvtvo
 */
public class KhoJFrame extends javax.swing.JFrame {

    /**
     * Creates new form Kho
     */
    public KhoJFrame() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cboLSP = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        lblTongTien = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKho = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        btnXoa = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblSanPham.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSanPham);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Tìm kiếm");

        txtTimKiem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Loại sản phẩm");

        cboLSP.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboLSP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboLSP.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboLSPItemStateChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("Tổng tiền đã nhập kho");

        lblTongTien.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTongTien.setForeground(new java.awt.Color(255, 102, 102));
        lblTongTien.setText("0");

        tblKho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblKho);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Danh sách sản phẩm");

        btnXoa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnXoa.setText("Xóa khỏi kho");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Chi tiết kho");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2)
                        .addComponent(txtTimKiem)
                        .addComponent(cboLSP, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2))
                            .addGap(184, 184, 184)))
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(lblTongTien))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel5)
                        .addGap(571, 571, 571)
                        .addComponent(btnXoa))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 797, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel5))
                    .addComponent(btnXoa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboLSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(lblTongTien)
                        .addGap(57, 57, 57))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) {
            openNhapKho();
        }
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        // TODO add your handling code here:
        if (txtTimKiem.getText().equalsIgnoreCase("")) {
            fillTableSP();
        } else {
            findSP();
        }
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void cboLSPItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboLSPItemStateChanged
        // TODO add your handling code here:
        locSP();
    }//GEN-LAST:event_cboLSPItemStateChanged

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KhoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KhoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KhoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KhoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KhoJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboLSP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JTable tblKho;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private void init() {
        this.setLocationRelativeTo(null);
        fillTable();
        fillComBoBoxLSP();
        fillTableSP();
        TongTien();
    }
    int row = -1;
    KhoDAO dao = new KhoDAO();
    LoaiSanPhamDAO lsdao = new LoaiSanPhamDAO();
    DonViTinhDAO dtdao = new DonViTinhDAO();
    SanPhamDAO spdao = new SanPhamDAO();

    void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblKho.getModel();
        Object[] col = {"Mã Kho", "Tên Sản phẩm", "ĐVT", "Số lượng", "Giá Nhập", "Tổng giá", "Ngày Tạo"};
        model.setColumnIdentifiers(col);
        model.setRowCount(0);
        List<model.Kho> list = dao.selectAll();
        for (model.Kho nk : list) {
            SanPham sp = spdao.selectById(nk.getMaSP());
            DonViTinh dt = dtdao.selectById(nk.getMaDVT());
            Object[] row = {
                nk.getMaNK(), sp.getTenSP(), dt.getTenDVT(), nk.getSlNhap(), nk.getGiaNhap(), nk.getTongGia(), nk.getNgayTao()
            };
            model.addRow(row);
        }
    }

    void fillComBoBoxLSP() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboLSP.getModel();
        model.removeAllElements();
        model.addElement("Tất cả");
        List<LoaiSanPham> list = lsdao.selectAll();
        for (LoaiSanPham ls : list) {
            model.addElement(ls);
        }
    }

    void fillTableSP() {
        try {
            DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
            Object[] col = {"Tên sản phẩm", "Mã"};
            model.setColumnIdentifiers(col);
            model.setRowCount(0);
            List<SanPham> list = spdao.selectAll();
            for (SanPham sp : list) {
                Object[] row = {
                    sp.getTenSP(), sp.getMaSP()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn ");
            e.printStackTrace();
        }
    }

    void locSP() {
        try {
            if (cboLSP.getSelectedIndex() == 0) {
                fillTableSP();
            } else {
                DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
                Object[] col = {"Tên sản phẩm", "Mã"};
                model.setColumnIdentifiers(col);
                model.setRowCount(0);
                String MaLSP = ((LoaiSanPham) cboLSP.getSelectedItem()).getTenLSP();
                LoaiSanPham ls = (LoaiSanPham) lsdao.selectByName(MaLSP);
                List<SanPham> list = spdao.selectByLSP(ls.getMaLSP());
                for (SanPham sp : list) {
                    Object[] row = {
                        sp.getTenSP(), sp.getMaSP()
                    };
                    model.addRow(row);
                }
            }
        } catch (Exception e) {
        }
    }

    void findSP() {
        try {
            DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
            Object[] col = {"Tên sản phẩm", "Mã"};
            model.setColumnIdentifiers(col);
            model.setRowCount(0);
            String ten = txtTimKiem.getText();
            List<SanPham> list = spdao.selectByNameAndId(ten);
            for (SanPham sp : list) {
                Object[] row = {
                    sp.getTenSP(), sp.getMaSP()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
        }
    }

    public static String tenSP;

    void openNhapKho() {
        if (tblKho.getRowCount() == 0) {
            tenSP = String.valueOf(tblSanPham.getValueAt(tblSanPham.getSelectedRow(), 0).toString());
            NhapKhoJDialog dialog = new NhapKhoJDialog(this, true);
            dialog.setVisible(true);
            fillTable();
            TongTien();
        } else {
            int end = 0;
            for (int i = 0; i < tblKho.getRowCount(); i++) {
                tenSP = String.valueOf(tblSanPham.getValueAt(tblSanPham.getSelectedRow(), 0).toString());
                if (tenSP.equals(String.valueOf(tblKho.getValueAt(i, 1).toString()))) {
                    end = 1;
                    break;
                }
            }
            if (end == 1) {
                tenSP = String.valueOf(tblSanPham.getValueAt(tblSanPham.getSelectedRow(), 0).toString());
                UpdateSLKhoJDialog dialog = new UpdateSLKhoJDialog(this, true);
                dialog.setVisible(true);
                fillTable();
                TongTien();
            } else {
                tenSP = String.valueOf(tblSanPham.getValueAt(tblSanPham.getSelectedRow(), 0).toString());
                NhapKhoJDialog dialog = new NhapKhoJDialog(this, true);
                dialog.setVisible(true);
                fillTable();
                TongTien();
            }
        }
    }

    void delete() {
        try {
            int id = Integer.parseInt(tblKho.getValueAt(tblKho.getSelectedRow(), 0).toString());
            dao.delete(id);
            fillTable();
            MsgBox.alert(this, "Xóa thành công!");
            TongTien();
        } catch (Exception e) {
            MsgBox.alert(this, "Xóa thất bại!");
        }

    }

    void TongTien() {
        double sum = 0;
        for (int i = 0; i < tblKho.getRowCount(); i++) {
            double tongTien = Double.parseDouble(tblKho.getValueAt(i, 5).toString());
            sum += tongTien;
        }
        lblTongTien.setText(NumberFormat.getNumberInstance().format(sum) + " VNĐ");
    }
}
