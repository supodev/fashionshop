/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import dao.DonViTinhDAO;
import dao.HoaDonChiTietDAO;
import dao.HoaDonDAO;
import dao.KhachHangDAO;
import dao.KhoDAO;
import dao.LoaiSanPhamDAO;
import dao.SanPhamDAO;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Random;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import model.DonViTinh;
import model.HoaDon;
import model.HoaDonChiTiet;
import model.KhachHang;
import model.Kho;
import model.LoaiSanPham;
import model.SanPham;
import utils.Auth;
import utils.MsgBox;
import utils.XJdbc;

/**
 *
 * @author vvtvo
 */
public class HoaDonJFrame extends javax.swing.JFrame {

    /**
     * Creates new form HoaDonJFrame
     */
    public static String tenSP;
    public static double donGia;
    public static int soLuong;

    public HoaDonJFrame() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHDCC = new javax.swing.JTable();
        btnXoaDong = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtTenKH = new javax.swing.JTextField();
        btnOpenKH = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtGiamGia = new javax.swing.JTextField();
        btnGiamGia = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        lblTongTienDV = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblGiamTheoKH = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblTongTien = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtTienKhachTra = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lblTienThoi = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        btnThanhToan = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtHoaDon = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cboLSP = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblHDCC.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        tblHDCC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblHDCC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHDCCMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblHDCC);

        btnXoaDong.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnXoaDong.setText("Xóa sản phẩm");
        btnXoaDong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaDongActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Chi tiết hóa đơn");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 817, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnXoaDong)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoaDong)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin hóa đơn", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(0, 51, 255))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Tên khách hàng");

        txtTenKH.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnOpenKH.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnOpenKH.setText("Chọn khách hàng");
        btnOpenKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenKHActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Giảm giá");

        txtGiamGia.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtGiamGia.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtGiamGia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtGiamGiaKeyReleased(evt);
            }
        });

        btnGiamGia.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnGiamGia.setText("OK");
        btnGiamGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGiamGiaActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Tổng tiền dịch vụ");

        lblTongTienDV.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTongTienDV.setForeground(new java.awt.Color(0, 0, 255));
        lblTongTienDV.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTongTienDV.setText("0");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Giảm theo khách hàng");

        lblGiamTheoKH.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblGiamTheoKH.setForeground(new java.awt.Color(0, 0, 255));
        lblGiamTheoKH.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblGiamTheoKH.setText("0");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("--------------------------------");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Tổng thanh toán");

        lblTongTien.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTongTien.setForeground(new java.awt.Color(0, 0, 255));
        lblTongTien.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTongTien.setText("0");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Tiền khách trả");

        txtTienKhachTra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTienKhachTra.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTienKhachTra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTienKhachTraKeyReleased(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Tiền thối lại");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel15.setText("________________________________");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel16.setText("________________________________");

        lblTienThoi.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTienThoi.setForeground(new java.awt.Color(0, 0, 255));
        lblTienThoi.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTienThoi.setText("0");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setText("VNĐ");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel19.setText("VNĐ");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel20.setText("VNĐ");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel21.setText("VNĐ");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel22.setText("VNĐ");

        btnThanhToan.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnThanhToan.setText("Thanh Toán Và In Hóa Đơn ( F12)");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("__");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Mã Hóa đơn");

        txtHoaDon.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTenKH)
                    .addComponent(txtGiamGia)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblTienThoi, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(lblGiamTheoKH, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, 0)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(3, 3, 3))
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(btnThanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(txtTienKhachTra)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(txtHoaDon))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTongTienDV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(3, 3, 3)
                        .addComponent(jLabel21))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnOpenKH))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGiamGia)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOpenKH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGiamGia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lblTongTienDV)
                    .addComponent(jLabel21))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lblGiamTheoKH)
                    .addComponent(jLabel20))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(lblTongTien)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTienKhachTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(lblTienThoi)
                    .addComponent(jLabel22))
                .addGap(18, 18, 18)
                .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tblSanPham.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSanPham);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Tìm kiếm");

        txtTimKiem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Loại sản phẩm");

        cboLSP.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboLSP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboLSP.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboLSPItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboLSP, 0, 160, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(cboLSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOpenKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenKHActionPerformed
        // TODO add your handling code here:
        openKH();
    }//GEN-LAST:event_btnOpenKHActionPerformed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        // TODO add your handling code here:
        findSP();
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void cboLSPItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboLSPItemStateChanged
        // TODO add your handling code here:
        locSP();
    }//GEN-LAST:event_cboLSPItemStateChanged

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            openNhapSL();
        } else {
        }
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void tblHDCCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHDCCMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            openUpSL();
        }
    }//GEN-LAST:event_tblHDCCMouseClicked

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        // TODO add your handling code here:
        isValidated();
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void btnGiamGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGiamGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGiamGiaActionPerformed

    private void txtTienKhachTraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienKhachTraKeyReleased
        // TODO add your handling code here:
        tienTraKhach();
    }//GEN-LAST:event_txtTienKhachTraKeyReleased

    private void txtGiamGiaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGiamGiaKeyReleased
        // TODO add your handling code here:
        GiamGia();
    }//GEN-LAST:event_txtGiamGiaKeyReleased

    private void btnXoaDongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaDongActionPerformed
        // TODO add your handling code here:
        deleteRowTable();
    }//GEN-LAST:event_btnXoaDongActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HoaDonJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HoaDonJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HoaDonJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HoaDonJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HoaDonJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGiamGia;
    private javax.swing.JButton btnOpenKH;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnXoaDong;
    private javax.swing.JComboBox<String> cboLSP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblGiamTheoKH;
    private javax.swing.JLabel lblTienThoi;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JLabel lblTongTienDV;
    private javax.swing.JTable tblHDCC;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField txtGiamGia;
    private javax.swing.JTextField txtHoaDon;
    private javax.swing.JTextField txtTenKH;
    private javax.swing.JTextField txtTienKhachTra;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private void init() {
        this.setSize(1300, 800);
        this.setMinimumSize(new Dimension(1300, 800));
        this.setMaximumSize(new Dimension(1300, 800));
        this.setLocationRelativeTo(null);
        fillComBoBoxLSP();
        autuHoaDon();
        btnThanhToan.setMnemonic(KeyEvent.VK_F12);
    }
    HoaDonDAO dao = new HoaDonDAO();
    HoaDonChiTietDAO ccdao = new HoaDonChiTietDAO();
    LoaiSanPhamDAO lsdao = new LoaiSanPhamDAO();
    SanPhamDAO spdao = new SanPhamDAO();
    KhoDAO nkdao = new KhoDAO();
    DonViTinhDAO dtdao = new DonViTinhDAO();
    KhachHangDAO khdao = new KhachHangDAO();
    int row = -1;

    void fillComBoBoxLSP() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboLSP.getModel();
        model.removeAllElements();
        model.addElement("Tất cả");
        List<LoaiSanPham> list = lsdao.selectAll();
        for (LoaiSanPham ls : list) {
            model.addElement(ls);
        }
    }

    void fillTableSP() {
        try {
            DefaultTableModel model1 = (DefaultTableModel) tblHDCC.getModel();
            model1.setRowCount(0);
            Object[] col1 = {"*", "Tên", "ĐVT", "SL", "Đơn Giá", "Thành tiền"};
            model1.setColumnIdentifiers(col1);
            DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
            Object[] col = {"Tên sản phẩm", "Giá bán", "Tồn kho"};
            model.setColumnIdentifiers(col);
            model.setRowCount(0);
            List<SanPham> list = spdao.selectAll();
            for (SanPham sp : list) {
                Kho nk = (Kho) nkdao.selectBySP(sp.getMaSP());
                Object[] row = {
                    sp.getTenSP(), sp.getGiaBan(), nk.getSlNhap()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Chưa nhập sản phẩm vào kho không thể thanh toán");
            this.dispose();
        }
    }

    void locSP() {
        try {
            if (cboLSP.getSelectedIndex() == 0) {
                fillTableSP();
            } else {
                DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
                Object[] col = {"Tên sản phẩm", "Giá bán", "Tồn kho"};
                model.setColumnIdentifiers(col);
                model.setRowCount(0);
                String MaLSP = ((LoaiSanPham) cboLSP.getSelectedItem()).getTenLSP();
                LoaiSanPham ls = (LoaiSanPham) lsdao.selectByName(MaLSP);
                List<SanPham> list = spdao.selectByLSP(ls.getMaLSP());
                for (SanPham sp : list) {
                    Kho nk = (Kho) nkdao.selectBySP(sp.getMaSP());
                    Object[] row = {
                        sp.getTenSP(), sp.getGiaBan(), nk.getSlNhap()
                    };
                    model.addRow(row);
                }
            }
        } catch (Exception e) {
        }
    }

    void findSP() {
        try {
            DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
            Object[] col = {"Tên sản phẩm", "Giá bán", "Tồn kho"};
            model.setColumnIdentifiers(col);
            model.setRowCount(0);
            String ten = txtTimKiem.getText();
            List<SanPham> list = spdao.selectByNameAndId(ten);
            for (SanPham sp : list) {
                Kho nk = (Kho) nkdao.selectBySP(sp.getMaSP());
                Object[] row = {
                    sp.getTenSP(), sp.getGiaBan(), nk.getSlNhap()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
        }
    }

    void fillTableCCHD() {
        DefaultTableModel model = (DefaultTableModel) tblHDCC.getModel();
        double thanhTien = soLuong * donGia;
        SanPham sp = spdao.selectByName(tenSP);
        int madvt = sp.getMaDVT();
        DonViTinh tendvt = dtdao.selectById(madvt);
        Object[] row = {
            model.getRowCount() + 1, sp.getTenSP(), tendvt.getTenDVT(), soLuong, donGia, thanhTien};
        model.addRow(row);
        lblTongTienDV.setText(String.valueOf(tongTienDV()));
        lblTongTien.setText(String.valueOf(tongTienHD()));
    }

    void checkTrungID() {
        DefaultTableModel model = (DefaultTableModel) tblHDCC.getModel();
        int row = tblHDCC.getSelectedRow();
        String ten = String.valueOf(tblHDCC.getValueAt(row, 1).toString());
        for (int i = 0; i < tblSanPham.getRowCount(); i++) {
            if (ten.equals(String.valueOf(tblSanPham.getValueAt(i, 0).toString()))) {
                int slOld = Integer.parseInt(tblSanPham.getValueAt(i, 2).toString());
                if (slOld < soLuong) {
                    MsgBox.alert(this, "Số lượng trong kho không đủ!");
                } else if (slOld == 0) {
                    MsgBox.alert(this, "Số lượng trong kho đã hết cần nhập thêm!");
                } else {
                    model.removeRow(row);
                    fillTableCCHD();
                }
            }
        }
        //load lại số lượng 
        for (int i = 0; i < tblSanPham.getRowCount(); i++) {
            if (ten.equals(String.valueOf(tblSanPham.getValueAt(i, 0).toString()))) {
                DefaultTableModel model2 = (DefaultTableModel) tblSanPham.getModel();
                SanPham sp = spdao.selectByName(ten);
                model2.removeRow(i);
                Kho nk = (Kho) nkdao.selectBySP(sp.getMaSP());
                int slOld = nk.getSlNhap();
                int slNew = slOld - soLuong;
                Object[] rows = {
                    sp.getTenSP(), sp.getGiaBan(), slNew
                };
                model2.addRow(rows);
            }
        }

    }

    List<String> list = new ArrayList<>();

    void openNhapSL() {
        if (tblHDCC.getRowCount() == 0) {
            tenSP = String.valueOf(tblSanPham.getValueAt(tblSanPham.getSelectedRow(), 0).toString());
            donGia = Double.parseDouble(tblSanPham.getValueAt(tblSanPham.getSelectedRow(), 1).toString());
            list.add(tenSP);
            NhapSLJDialog diglog = new NhapSLJDialog(this, true);
            diglog.setVisible(true);
            int slOld = Integer.parseInt(tblSanPham.getValueAt(tblSanPham.getSelectedRow(), 2).toString());
            if (slOld < soLuong) {
                MsgBox.alert(this, "Số lượng trong kho không đủ!");
            } else if (slOld == 0) {
                MsgBox.alert(this, "Số lượng trong kho đã hết cần nhập thêm!");
            } else {
                fillTableCCHD();
                loadSL();
            }
        } else {
            int i = 0;
            for (String tensanpham : list) {
                tenSP = String.valueOf(tblSanPham.getValueAt(tblSanPham.getSelectedRow(), 0).toString());
                if (tenSP.equals(tensanpham)) {
                    i = 1;
                    break;
                }
            }
            if (i == 1) {
                MsgBox.alert(this, "Sản phẩm đã tồn tại trong hóa đơn.\nVui lòng chọn sản phẩm trong hóa đơn để thay đổi số lượng");
            } else {
                donGia = Double.parseDouble(tblSanPham.getValueAt(tblSanPham.getSelectedRow(), 1).toString());
                list.add(tenSP);
                NhapSLJDialog diglog = new NhapSLJDialog(this, true);
                diglog.setVisible(true);
                int slOld = Integer.parseInt(tblSanPham.getValueAt(tblSanPham.getSelectedRow(), 2).toString());
                if (slOld < soLuong) {
                    MsgBox.alert(this, "Số lượng trong kho không đủ!");
                } else if (slOld == 0) {
                    MsgBox.alert(this, "Số lượng trong kho đã hết cần nhập thêm!");
                } else {
                    fillTableCCHD();
                    loadSL();
                }
            }
        }
    }

    void openUpSL() {
        tenSP = String.valueOf(tblHDCC.getValueAt(tblHDCC.getSelectedRow(), 1).toString());
        donGia = Double.parseDouble(tblHDCC.getValueAt(tblHDCC.getSelectedRow(), 4).toString());
        soLuong = Integer.parseInt(tblHDCC.getValueAt(tblHDCC.getSelectedRow(), 3).toString());
        NhapSLJDialog diglog = new NhapSLJDialog(this, true);
        diglog.setVisible(true);
        checkTrungID();
    }
    public static String tenKH;

    void openKH() {
        KhachHangJDialog dialog = new KhachHangJDialog(this, true);
        dialog.setVisible(true);
        txtTenKH.setText(tenKH);
    }

    double tongTienDV() {
        double tongTien = 0;
        for (int i = 0; i < tblHDCC.getRowCount(); i++) {
            tongTien += Double.parseDouble(tblHDCC.getValueAt(i, 5).toString());
        }
        return tongTien;
    }

    double tongTienHD() {
        double tongHD = 0;
        tongHD = Double.parseDouble(lblTongTienDV.getText()) - Double.parseDouble(lblGiamTheoKH.getText());
        return tongHD;
    }

    void tienTraKhach() {
        String key = txtTienKhachTra.getText();
        if (key.isEmpty()) {
            lblTienThoi.setText("0");
        } else {
            double tienTK = Double.parseDouble(txtTienKhachTra.getText()) - tongTienHD();
            lblTienThoi.setText(String.valueOf(tienTK));
        }
    }

    void GiamGia() {
        String key = txtGiamGia.getText();
        if (key.isEmpty()) {
            lblGiamTheoKH.setText("0");
            lblTongTien.setText(String.valueOf(tongTienHD()));
        } else {
            lblGiamTheoKH.setText(String.valueOf(Double.parseDouble(txtGiamGia.getText())));
            lblTongTien.setText(String.valueOf(tongTienHD()));
        }
    }

    void insertHoaDon() {
        try {
            HoaDon hd = new HoaDon();
            String tenkh = txtTenKH.getText();
            KhachHang kh = khdao.selectByName(tenkh);
            hd.setMaHD(txtHoaDon.getText());
            hd.setMaKH(kh.getMaKH());
            hd.setNgayTao(new Date());
            hd.setTienDV(Double.parseDouble(lblTongTienDV.getText()));
            hd.setTienKhachTra(Double.parseDouble(txtTienKhachTra.getText()));
            if (txtGiamGia.getText().isEmpty()) {
                hd.setGiamGia(0);
            } else {
                hd.setGiamGia(Double.parseDouble(lblGiamTheoKH.getText()));
            }
            hd.setTienTraKhach(Double.parseDouble(lblTienThoi.getText()));
            hd.setTongTien(Double.parseDouble(lblTongTien.getText()));
            hd.setMaNV(Auth.user.getMaNV());
            dao.insert(hd);
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn");
        }
    }

    void insertHoaDonChiTiet() {
        try {
            HoaDonChiTiet cc = new HoaDonChiTiet();
            for (int i = 0; i < tblHDCC.getRowCount(); i++) {
                String tensp = String.valueOf(tblHDCC.getValueAt(i, 1).toString());
                SanPham sp = spdao.selectByName(tensp);
                int sl = Integer.parseInt(tblHDCC.getValueAt(i, 3).toString());
                double dongia = Double.parseDouble(tblHDCC.getValueAt(i, 4).toString());
                double thanhTien = sl * dongia;
                String mahd = txtHoaDon.getText();
                cc.setMaHD(mahd);
                cc.setMaSP(sp.getMaSP());
                cc.setSoLuong(sl);
                cc.setThanhTien(thanhTien);
                cc.setDonGia(dongia);
                ccdao.insert(cc);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn");
        }
    }

    void thanhToan() {
        try {
            insertHoaDon();
            insertHoaDonChiTiet();
            updateSLKho();
            xuatHoaDon(txtHoaDon.getText());
            MsgBox.alert(this, "Thanh Toán thành công!");
            loadNew();
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn!");
        }
    }

    void loadNew() {
        autuHoaDon();
        txtTenKH.setText("");
        txtGiamGia.setText("");
        fillTableSP();
        lblTongTienDV.setText("0");
        lblGiamTheoKH.setText("0");
        lblTongTien.setText("0");
        lblTongTienDV.setText("0");
        txtTienKhachTra.setText("0");
        fillComBoBoxLSP();
    }

    void autuHoaDon() {
        int dem = 100;
        HoaDon hd = new HoaDon();
        Random rand = new Random();
        int randoHD = rand.nextInt(9999);
        txtHoaDon.setText("HD" + randoHD);
    }

    void upSl() {
        for (int i = 0; i < tblSanPham.getRowCount(); i++) {
            List<HoaDonChiTiet> list = ccdao.selectAll();
            List<Kho> list2 = nkdao.selectAll();
            for (HoaDonChiTiet cc : list) {

            }
        }
    }

    private void deleteRowTable() {
        int row = tblHDCC.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tblHDCC.getModel();
        String ten = String.valueOf(tblHDCC.getValueAt(row, 1).toString());
        model.removeRow(row);
        //load số lượng lại ban đầu
        for (int i = 0; i < tblSanPham.getRowCount(); i++) {
            if (ten.equals(String.valueOf(tblSanPham.getValueAt(i, 0).toString()))) {
                DefaultTableModel model2 = (DefaultTableModel) tblSanPham.getModel();
                SanPham sp = spdao.selectByName(ten);
                model2.removeRow(i);
                Kho nk = (Kho) nkdao.selectBySP(sp.getMaSP());
                Object[] rows = {
                    sp.getTenSP(), sp.getGiaBan(), nk.getSlNhap()
                };
                model2.addRow(rows);
            }
        }
    }

    void xuatHoaDon(String mahd) {
        try {
            HashMap HoaDon = new HashMap();
            HoaDon.put("MaHD", mahd);
            XJdbc.inHoaDon(HoaDon);
        } catch (Exception e) {
            MsgBox.alert(this, "Có lỗi: " + e.toString());
        }
    }

    boolean isValidated() {
        if (txtTenKH.getText().isEmpty()) {
            MsgBox.alert(this, "Chưa nhập tên khách hàng!");
        } else if (tblHDCC.getRowCount() == 0) {
            MsgBox.alert(this, "Chưa chọn sản phẩm!");
        } else if (txtTienKhachTra.getText().isEmpty()) {
            MsgBox.alert(this, "Chưa nhập tiền khách trả");
        } else {
            thanhToan();
            return true;
        }
        return false;
    }

    void loadSL() {
        try {
            //load số lượng trên bảng sản phẩm
            int slOld = Integer.parseInt(tblSanPham.getValueAt(tblSanPham.getSelectedRow(), 2).toString());
            String ten = String.valueOf(tblSanPham.getValueAt(tblSanPham.getSelectedRow(), 0).toString());
            SanPham sp = spdao.selectByName(ten);
            DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
            int rows = tblSanPham.getSelectedRow();
            model.removeRow(rows);
            Kho nk = (Kho) nkdao.selectBySP(sp.getMaSP());
            int slNew = slOld - soLuong;
            Object[] row = {
                sp.getTenSP(), sp.getGiaBan(), slNew
            };
            model.addRow(row);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void updateSLKho() {
        for (int i = 0; i < tblSanPham.getRowCount(); i++) {
            String ten = String.valueOf(tblSanPham.getValueAt(i, 0).toString());
            SanPham sp = spdao.selectByName(ten);
            int slNew = Integer.parseInt(tblSanPham.getValueAt(i, 2).toString());
            nkdao.updateSL(slNew, sp.getMaSP());
        }
    }

}
